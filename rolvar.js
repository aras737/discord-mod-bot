const { SlashCommandBuilder, PermissionsBitField } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('rolver')
    .setDescription('Bir Ã¼yeye rol verir.')
    .addUserOption(option =>
      option.setName('kullanici')
        .setDescription('Rol verilecek kullanÄ±cÄ±')
        .setRequired(true))
    .addRoleOption(option =>
      option.setName('rol')
        .setDescription('Verilecek rol')
        .setRequired(true)),

  async execute(interaction) {
    // Komutu kullananÄ±n yetkisini kontrol et (Ã¶rnek: YÃ¶netici yetkisi)
    if (!interaction.member.permissions.has(PermissionsBitField.Flags.ManageRoles)) {
      return interaction.reply({ content: 'ğŸš« Bu komutu kullanmak iÃ§in rol yÃ¶netme yetkin olmalÄ±.', ephemeral: true });
    }

    const member = interaction.options.getMember('kullanici');
    const role = interaction.options.getRole('rol');

    if (!member) return interaction.reply({ content: 'KullanÄ±cÄ± bulunamadÄ±.', ephemeral: true });
    if (!role) return interaction.reply({ content: 'Rol bulunamadÄ±.', ephemeral: true });

    // Botun rolÃ¼, verilecek rolden yÃ¼ksek olmalÄ±
    if (interaction.guild.members.me.roles.highest.position <= role.position) {
      return interaction.reply({ content: 'ğŸš« Bu rolÃ¼ veremem. Rol benim en yÃ¼ksek rolÃ¼mden yÃ¼ksek.', ephemeral: true });
    }

    // Ãœyeye rolÃ¼ ver
    try {
      await member.roles.add(role);
      await interaction.reply({ content: `${member} kullanÄ±cÄ±sÄ±na ${role} rolÃ¼ verildi.`, ephemeral: false });
    } catch (error) {
      console.error('Rol verme hatasÄ±:', error);
      await interaction.reply({ content: 'ğŸš« Rol verilirken bir hata oluÅŸtu.', ephemeral: true });
    }
  },
};
